{$API_DOMAIN} {
  tls {$ISSUER_ADDRESS}
  encode gzip

  # some security headers
  header / {
    X-XSS-Protection "1; mode=block"
    X-Content-Type-Options "nosniff"
    X-Frame-Options "DENY"

    -Server
  }

  reverse_proxy api:8000

  log {
    output stdout
  }
}

{$INGRESS_DOMAIN} {
  tls {$ISSUER_ADDRESS}
  encode gzip

  header / {
    -Server
  }

  reverse_proxy api:8000 {
    # Workaround do minimize 502 errors
    # https://github.com/mholt/caddy/issues/1925
    # fail_timeout 0

    header_down -Server
    header_down -Access-Control-Allow-Headers
    header_down -Access-Control-Allow-Methods
    header_down -Access-Control-Allow-Origin
    header_down -Access-Control-Expose-Headers
    header_down -Access-Control-Max-Age
    header_down -Request-Id
    header_down -Response-Time
    header_down -Content-Md5
  }
  log {
    output stdout
  }
}

# legacy api on port 8000
{$WEB_DOMAIN}:8000, www.{$WEB_DOMAIN}:8000, {$INGRESS_DOMAIN}:80 {
  encode gzip

  # strip the headers to a bare minimum to make using the insecure endpoint difficult
  header / {
    Deprecation-Warning "If your client supports TLS, please use https://{$INGRESS_DOMAIN}"

    -Server
  }

  reverse_proxy api:8000 {
    # Workaround do minimize 502 errors
    # https://github.com/mholt/caddy/issues/1925
    # fail_timeout 0

    header_down -Server
    header_down -Access-Control-Allow-Headers
    header_down -Access-Control-Allow-Methods
    header_down -Access-Control-Allow-Origin
    header_down -Access-Control-Expose-Headers
    header_down -Access-Control-Max-Age
    header_down -Request-Id
    header_down -Response-Time
    header_down -Content-Md5
  }
  log {
    output stdout
  }
}

{$TTN_DOMAIN} {
  encode gzip

  header / {
    -Server
  }

  reverse_proxy ttn-integration:3000 
  
  log {
    output stdout 
  }
}

